name: Run switched packages content validation
trigger: none

parameters:
- name: packages
  displayName: |
      Comma-delimited list of packages to test against (by default, 'all' to run all). Example: 'azure-appconfiguration, azure-keyvault-keys'
  type: string
  default: 'all'

stages:
- stage: ContentValidationTesting
  jobs:
  - ${{ each packageName in split(parameters.packages, ',') }}:
    - ${{ if ne(parameters.packages, 'all') }}:
      - template: /eng/pipelines/package/${{ packageName }}.yml
        parameters:
          GitHubPat: $(GITHUB_PAT)
          GitHubOwner: $(GITHUB_OWNER)
          GitHubRepo: $(GITHUB_REPO)

  - ${{ if eq(parameters.packages, 'all') }}:
    - template: /eng/pipelines/package/run-all-packages.yml
      parameters:
        GitHubPat: $(GITHUB_PAT)
        GitHubOwner: $(GITHUB_OWNER)
        GitHubRepo: $(GITHUB_REPO)

- stage: TotalIssuesSummary
  dependsOn: ContentValidationTesting
  jobs:
  - job: Maintain_Total_Issues_List
    displayName: Maintain_Total_Issues_List
    pool:
      vmImage: ubuntu-latest
    steps:
    - task: DownloadPipelineArtifact@2
      displayName: Download The Last Artifact history-issues-summary
      inputs:
        buildType: 'specific'
        project: 'content-validation-automation'
        pipeline: 'Content Validation Pipeline'
        buildVersionToDownload: 'latestFromBranch'
        allowPartiallySucceededBuilds: true
        allowFailedBuilds: true
        branchName: 'refs/heads/main'
        artifactName: 'history-issues-summary'
        downloadPath: '$(System.DefaultWorkingDirectory)/Artifacts'
      continueOnError: true

    - task: DownloadPipelineArtifact@2
      displayName: Download The Current Artifact 
      inputs:
        buildType: 'current'
        downloadPath: '$(System.DefaultWorkingDirectory)/Artifacts'

    - task: DotNetCoreCLI@2
      displayName: Build issuer helper project
      inputs:
        command: 'build'
        projects: 'IssuerHelper/IssuerHelper.csproj'

    - task: DotNetCoreCLI@2
      displayName: Summary Total Issues of all packages
      env:
        PackageName: ${{ parameters.packages }}
      inputs:
        command: 'run'
        workingDirectory: '$(System.DefaultWorkingDirectory)/IssuerHelper'

    - task: PublishPipelineArtifact@1
      displayName: "Upload pipeline test data"
      inputs:
        targetPath: $(System.DefaultWorkingDirectory)/eng/SummaryTotalIssues.json
        artifactName: history-issues-summary
        publishLocation: "pipeline"